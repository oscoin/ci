#!/usr/bin/env bash
set -eou pipefail
IFS=$'\n\t'

declare -ri MIN_TIMEOUT_MINUTES=50
declare -ri MAX_TIMEOUT_MINUTES=240
declare -i timeout_minutes=$MIN_TIMEOUT_MINUTES

declare -r cache_volume_prefix="cache_${BUILDKITE_AGENT_NAME}_${BUILDKITE_ORGANIZATION_SLUG}_${BUILDKITE_PIPELINE_SLUG}"
declare -r master_cache_volume="${cache_volume_prefix}_${BUILDKITE_PIPELINE_DEFAULT_BRANCH}"

# Create volume for master branch, if not exists
docker volume create \
    --driver=zockervols \
    --opt="quota=1GiB" \
    "$master_cache_volume"

if [[ "${BUILDKITE_REPO}" =~ (https|git)://github.com/oscoin/* ]]
then
    export DOCKER_RUNTIME=runc

    if [[ "${BUILDKITE_BRANCH}" == "${BUILDKITE_PIPELINE_DEFAULT_BRANCH}" ]]
    then
        # Use and mutate the master cache
        export DOCKER_CACHE_MOUNT="type=volume,src=${master_cache_volume},dst=/cache,volume-driver=zockervols"
    else
        # Create a branch cache from master, labelled for later pruning
        declare -r branch_cache_volume="${cache_volume_prefix}_${BUILDKITE_BRANCH}"
        docker volume create \
            --driver=zockervols \
            --label=build_cache \
            --opt="from=${master_cache_volume}" \
            --opt="quota=1GiB" \
            "$branch_cache_volume"
        export DOCKER_CACHE_MOUNT="type=volume,src=${branch_cache_volume},dst=/cache,volume-driver=zockervols"
    fi

    # FIXME: can we ensure somehow that all variables in secrets_file are
    # prefixed by `SECRET_`?
    declare -r secrets_file="/etc/buildkite-agent/secrets"
    if test -r "$secrets_file" -a -f "$secrets_file"
    then
        set -a
        # shellcheck source=/dev/null
        . "$secrets_file"
        set +a
    fi

    export SECRET_GOOGLE_APPLICATION_CREDENTIALS=/etc/gce/cred.json

    # "Trusted" builds may bump the timeout
    if [[ "${BUILDKITE_TIMEOUT}" != "false" ]]
    then
        timeout_minutes="$((BUILDKITE_TIMEOUT > MAX_TIMEOUT_MINUTES ? MAX_TIMEOUT_MINUTES : BUILDKITE_TIMEOUT))"
    fi
else
    # Use kata-containers for isolation
    export DOCKER_RUNTIME=kata-containers
    # Create an anonymous branch cache from master, which gets discarded at the
    # end of the build
    export DOCKER_CACHE_MOUNT="type=volume,dst=/cache,volume-driver=zockervols,volume-opt=from=${master_cache_volume},volume-opt=quota=1GiB"
fi

export BUILD_TIMEOUT_MINUTES=$timeout_minutes
